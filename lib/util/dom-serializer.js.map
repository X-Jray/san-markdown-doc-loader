{"version":3,"sources":["util/dom-serializer.js"],"names":["ElementType","require","entities","unencodedElements","__proto__","style","script","xmp","iframe","noembed","noframes","plaintext","noscript","formatAttrs","attributes","opts","output","value","key","decodeEntities","encodeXML","singleTag","area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr","render","module","exports","dom","Array","isArray","cheerio","i","length","elem","type","children","isTag","renderTag","Directive","renderDirective","Comment","renderComment","CDATA","renderCdata","renderText","name","xmlMode","tag","attribs","data","parent"],"mappings":"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","file":"dom-serializer.js","sourcesContent":["/**\n * @file stolen form dom-serializer\n * @author leon <ludafa@outlook.com>\n */\n\n/* eslint-disable */\n\n/*\n  Module dependencies\n*/\nvar ElementType = require('domelementtype');\nvar entities = require('entities');\n\n/*\n  Boolean Attributes\n  由于 san 对空值属性的处理与 html 规范不一致，这里需要做一些 hack\n  1. 不存在 boolean attributes\n  2. 所有空值属性，它们的值会被处理为属性名。即 <a xxx /> 等同于 <a xxx=\"xxx\" />\n  所以我们做的 hack 就是用户写啥，我们输出啥就好了\n*/\n// var booleanAttributes = {\n//   __proto__: null,\n//   allowfullscreen: true,\n//   async: true,\n//   autofocus: true,\n//   autoplay: true,\n//   checked: true,\n//   controls: true,\n//   default: true,\n//   defer: true,\n//   disabled: true,\n//   hidden: true,\n//   ismap: true,\n//   loop: true,\n//   multiple: true,\n//   muted: true,\n//   open: true,\n//   readonly: true,\n//   required: true,\n//   reversed: true,\n//   scoped: true,\n//   seamless: true,\n//   selected: true,\n//   typemustmatch: true\n// };\n\nvar unencodedElements = {\n  __proto__: null,\n  style: true,\n  script: true,\n  xmp: true,\n  iframe: true,\n  noembed: true,\n  noframes: true,\n  plaintext: true,\n  noscript: true\n};\n\n/*\n  Format attributes\n*/\nfunction formatAttrs(attributes, opts) {\n  if (!attributes) return;\n\n  var output = '',\n      value;\n\n  // Loop through the attributes\n  for (var key in attributes) {\n    value = attributes[key];\n    if (output) {\n      output += ' ';\n    }\n\n    if (!value) {\n      output += key;\n    } else {\n      output += key + '=\"' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '\"';\n    }\n  }\n\n  return output;\n}\n\n/*\n  Self-enclosing tags (stolen from node-htmlparser)\n*/\nvar singleTag = {\n  __proto__: null,\n  area: true,\n  base: true,\n  basefont: true,\n  br: true,\n  col: true,\n  command: true,\n  embed: true,\n  frame: true,\n  hr: true,\n  img: true,\n  input: true,\n  isindex: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true,\n};\n\n\nvar render = module.exports = function(dom, opts) {\n  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];\n  opts = opts || {};\n\n  var output = '';\n\n  for(var i = 0; i < dom.length; i++){\n    var elem = dom[i];\n\n    if (elem.type === 'root')\n      output += render(elem.children, opts);\n    else if (ElementType.isTag(elem))\n      output += renderTag(elem, opts);\n    else if (elem.type === ElementType.Directive)\n      output += renderDirective(elem);\n    else if (elem.type === ElementType.Comment)\n      output += renderComment(elem);\n    else if (elem.type === ElementType.CDATA)\n      output += renderCdata(elem);\n    else\n      output += renderText(elem, opts);\n  }\n\n  return output;\n};\n\nfunction renderTag(elem, opts) {\n  // Handle SVG\n  if (elem.name === \"svg\") opts = {decodeEntities: opts.decodeEntities, xmlMode: true};\n\n  var tag = '<' + elem.name,\n      attribs = formatAttrs(elem.attribs, opts);\n\n  if (attribs) {\n    tag += ' ' + attribs;\n  }\n\n  if (\n    opts.xmlMode\n    && (!elem.children || elem.children.length === 0)\n  ) {\n    tag += '/>';\n  } else {\n    tag += '>';\n    if (elem.children) {\n      tag += render(elem.children, opts);\n    }\n\n    if (!singleTag[elem.name] || opts.xmlMode) {\n      tag += '</' + elem.name + '>';\n    }\n  }\n\n  return tag;\n}\n\nfunction renderDirective(elem) {\n  return '<' + elem.data + '>';\n}\n\nfunction renderText(elem, opts) {\n  var data = elem.data || '';\n\n  // if entities weren't decoded, no need to encode them back\n  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {\n    data = entities.encodeXML(data);\n  }\n\n  return data;\n}\n\nfunction renderCdata(elem) {\n  return '<![CDATA[' + elem.children[0].data + ']]>';\n}\n\nfunction renderComment(elem) {\n  return '<!--' + elem.data + '-->';\n}\n"]}