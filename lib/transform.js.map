{"version":3,"sources":["transform.js"],"names":["babylon","require","traverse","default","gen","util","normalizeDependences","options","code","targetPath","originPath","ast","parse","sourceType","ImportDeclaration","enter","node","source","isRelativeModulePath","value","translateModulePath","result","retainLines","compact","concise","quotes","module","exports"],"mappings":";;AAAA;;;;;AAKA;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,WAAWD,QAAQ,gBAAR,EAA0BE,OAA3C;AACA,IAAMC,MAAMH,QAAQ,iBAAR,EAA2BE,OAAvC;AACA,IAAME,OAAOJ,QAAQ,QAAR,CAAb;;AAEA,SAASK,oBAAT,CAA8BC,OAA9B,EAAuC;AAAA,QAE9BC,IAF8B,GAEED,OAFF,CAE9BC,IAF8B;AAAA,QAExBC,UAFwB,GAEEF,OAFF,CAExBE,UAFwB;AAAA,QAEZC,UAFY,GAEEH,OAFF,CAEZG,UAFY;;;AAInC,QAAIC,MAAMX,QAAQY,KAAR,CAAcJ,IAAd,EAAoB;AAC1BK,oBAAY;AADc,KAApB,CAAV;;AAIAX,aAASS,GAAT,EAAc;AACVG,2BAAmB;AACfC,iBADe,uBACD;AAAA,oBAAPC,IAAO,QAAPA,IAAO;;AACV;AACA,oBAAIC,SAASD,KAAKC,MAAlB;AACA,oBAAIZ,KAAKa,oBAAL,CAA0BD,OAAOE,KAAjC,CAAJ,EAA6C;AACzCF,2BAAOE,KAAP,GAAed,KAAKe,mBAAL,CACXH,OAAOE,KADI,EAEXT,UAFW,EAGXD,UAHW,CAAf;AAKH;AACJ;AAXc;AADT,KAAd;;AAgBA,QAAIY,SAASjB,IACTO,GADS,EAET;AACIW,qBAAa,KADjB;AAEIC,iBAAS,MAFb;AAGIC,iBAAS,KAHb;AAIIC,gBAAQ;AAJZ,KAFS,EAQTjB,IARS,CAAb;;AAWA,WAAOa,OAAOb,IAAd;AAEH;;AAEDkB,OAAOC,OAAP,GAAiB;AACbrB;AADa,CAAjB","file":"transform.js","sourcesContent":["/**\n * @file transform\n * @author leon<ludafa@outlook.com>\n */\n\n/* eslint-disable fecs-no-require */\n\nconst babylon = require('babylon');\nconst traverse = require('babel-traverse').default;\nconst gen = require('babel-generator').default;\nconst util = require('./util');\n\nfunction normalizeDependences(options) {\n\n    let {code, targetPath, originPath} = options;\n\n    let ast = babylon.parse(code, {\n        sourceType: 'module'\n    });\n\n    traverse(ast, {\n        ImportDeclaration: {\n            enter({node}) {\n                // 将 cache 文件中的依赖路径调整正确\n                let source = node.source;\n                if (util.isRelativeModulePath(source.value)) {\n                    source.value = util.translateModulePath(\n                        source.value,\n                        originPath,\n                        targetPath\n                    );\n                }\n            }\n        }\n    });\n\n    let result = gen(\n        ast,\n        {\n            retainLines: false,\n            compact: 'auto',\n            concise: false,\n            quotes: 'single'\n        },\n        code\n    );\n\n    return result.code;\n\n}\n\nmodule.exports = {\n    normalizeDependences\n};\n"]}