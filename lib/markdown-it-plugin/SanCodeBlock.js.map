{"version":3,"sources":["markdown-it-plugin/SanCodeBlock.js"],"names":["markdownitfence","require","_","COMPONENT_NAME","resolveFenceData","fence","trim","prefix","slice","title","module","exports","md","validate","params","render","tokens","index","options","env","self","info","content","escapedContent","escape","replace"],"mappings":";;AAAA;;;;;AAKA;;AAEA,IAAMA,kBAAkBC,QAAQ,SAAR,CAAxB;AACA,IAAMC,IAAID,QAAQ,QAAR,CAAV;;AAEA,IAAME,iBAAiB,gBAAvB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;;AAE7BA,YAAQA,MAAMC,IAAN,EAAR;;AAEA,QAAIC,SAASF,MAAMG,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAb;AACA,QAAIC,QAAQJ,MAAMG,KAAN,CAAY,CAAZ,CAAZ;;AAEA,WAAO;AACHD,sBADG;AAEHE;AAFG,KAAP;AAKH;;AAEDC,OAAOC,OAAP,GAAiB,UAAUC,EAAV,EAAc;;AAE3B,WAAOZ,gBAAgBY,EAAhB,EAAoBT,cAApB,EAAoC;AACvCU,gBADuC,oBAC9BC,MAD8B,EACtB;AAAA,oCACSV,iBAAiBU,MAAjB,CADT;AAAA,gBACRP,MADQ,qBACRA,MADQ;AAAA,gBACAE,KADA,qBACAA,KADA;;AAEb,mBAAOF,WAAW,KAAX,IAAoBE,KAA3B;AACH,SAJsC;AAKvCM,cALuC,kBAKhCC,MALgC,EAKxBC,KALwB,EAKjBC,OALiB,EAKRC,GALQ,EAKHC,IALG,EAKG;AAAA,gCAEhBJ,OAAOC,KAAP,CAFgB;AAAA,gBAEjCI,IAFiC,iBAEjCA,IAFiC;AAAA,gBAE3BC,OAF2B,iBAE3BA,OAF2B;;AAAA,qCAGxBlB,iBAAiBiB,IAAjB,CAHwB;AAAA,gBAGjCZ,KAHiC,sBAGjCA,KAHiC;;AAItC,gBAAIc,iBAAiBrB,EAAEsB,MAAF,CAASF,OAAT,EAChBG,OADgB,CACR,KADQ,EACD,cADC,EAEhBA,OAFgB,CAER,KAFQ,EAED,cAFC,CAArB;;AAIA,iDACahB,KADb,mBACgCc,cADhC,gBAEND,OAFM;AAMH;AAnBsC,KAApC,CAAP;AAsBH,CAxBD","file":"SanCodeBlock.js","sourcesContent":["/**\n * @file SanComponentCodeBlock\n * @author leon <ludafa@outlook.com>\n */\n\n/* eslint-disable fecs-no-require */\n\nconst markdownitfence = require('./fence');\nconst _ = require('lodash');\n\nconst COMPONENT_NAME = 'san-code-block';\n\nfunction resolveFenceData(fence) {\n\n    fence = fence.trim();\n\n    let prefix = fence.slice(0, 3);\n    let title = fence.slice(4);\n\n    return {\n        prefix,\n        title\n    };\n\n}\n\nmodule.exports = function (md) {\n\n    return markdownitfence(md, COMPONENT_NAME, {\n        validate(params) {\n            let {prefix, title} = resolveFenceData(params);\n            return prefix === 'san' && title;\n        },\n        render(tokens, index, options, env, self) {\n\n            let {info, content} = tokens[index];\n            let {title} = resolveFenceData(info);\n            let escapedContent = _.escape(content)\n                .replace(/{{/g, '&#x7B;&#x7B;')\n                .replace(/}}/g, '&#x7D;&#x7D;');\n\n            return `\n<san-code-block title=\"${title}\" content=\"${escapedContent}\">\n    ${content}\n</san-code-block>\n`;\n\n        }\n    });\n\n};\n"]}